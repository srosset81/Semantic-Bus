version: '3.3'
services:
    
    proxy:
      image: traefik
      command: --api --docker
      ports:
        - "80:80"
        - "8080:8080"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      restart: unless-stopped

    semanticbus:
      build: .
      container_name: semanticbus
      image: debian/latest
      environment:
          - NODE_ENV=development_docker
      volumes:
        - ./webServices:/data/app/webServices
        - ./lib:/data/app/lib
        - ./static:/data/app/static
        
      links:
          - mongodb
          - rabbitmq
      depends_on:
          - mongodb
          - rabbitmq
      command: ["/data/scripts/wait-for-it.sh", "rabbitmq:5672", "-t", "25", "--", "npm", "run", "start:server"]
      labels:
        - "traefik.port=80"
        - "traefik.backend=semanticbus"
        - "traefik.frontend.rule=Host:semanticbus.docker"

    rabbitmq:
      image: semanticbus/rabbitmq-stomp
      hostname: rabbitmq
      ports:
        - "5672:5672"
        - 15674:15674
        - 15672:15672
      expose:
        - "5672"
      labels:
        NAME: "rabbitmq"
      # volumes:
      #   - ./rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config
      labels:
        - "traefik.frontend.rule=Host:semanticbus.rabbit"
        - "traefik.port=15672"
        - "traefik.backend=rabbitmq"
        - "traefik.frontend.entryPoints=http"
      # networks:
      #   - grappe
      #   - traefik
     
    mongodb:
        hostname: rabbitmq
        image: mongo:latest
        container_name: "mongodb"
        environment:
          - MONGO_DATA_DIR=/data/db
          - MONGO_LOG_DIR=/dev/null
        volumes:
          - ./data/db:/data/db
        ports:
            - 27017:27017
        expose:
          - "27017"
        command: mongod --smallfiles --logpath=/dev/null # --quiet
        # networks:
        #     - grappe

    e2e:
      container_name: e2e
      depends_on:
          - seleniume2e
          - semanticbus
      image: codeception/codeceptjs
      build:
          context: ./tests/e2e
      environment:
          # configure selenium host
          - SELENIUM_HOST=seleniume2e
          - SELENIUM_PORT=4444
          # configure app to test
      networks:
          - selenium-grid
          # required to test frontend availability
      volumes:
          - ./tests/e2e:/tests/e2e
          - /tmp/output:/tmp/output

    seleniume2e:
        container_name: seleniume2e
        image: selenium/standalone-chrome
        networks:
            - selenium-grid
        ports:
          - '4444'
          - '5900'

networks: 
  selenium-grid: